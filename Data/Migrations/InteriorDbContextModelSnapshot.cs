// <auto-generated />
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(CarsDbContext))]
    partial class InteriorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Entities.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Archived")
                        .HasColumnType("bit");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Archived = false,
                            CategoryId = 1,
                            ImageUrl = "https://www.bmw.ua/content/dam/bmw/common/all-models/m-series/m3-sedan/2023/highlights/bmw-3-series-cs-m-automobiles-gallery-impressions-m3-competition-02_890.jpg",
                            Name = "BMW M3",
                            Price = 100000m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            Archived = false,
                            CategoryId = 1,
                            ImageUrl = "https://www.bmw.tj/content/dam/bmw/common/all-models/m-series/m5-sedan/2021/Overview/bmw-m5-cs-onepager-gallery-m5-core-02-wallpaper.jpg",
                            Name = "BMW M5",
                            Price = 90000m,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 3,
                            Archived = false,
                            CategoryId = 2,
                            ImageUrl = "https://carnetwork.s3.ap-southeast-1.amazonaws.com/file/8647cc8284b349178fd78c46e65daa36.jpg",
                            Name = "BMW M4",
                            Price = 105000m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            Archived = false,
                            CategoryId = 5,
                            ImageUrl = "https://www.bmw.ua/content/dam/bmw/common/all-models/m-series/m8-gran-coupe/2022/onepager/bmw-m8-gran-coupe-onepager-gallery-m8-gc-thumbnail-01.jpg",
                            Name = "BMW M8",
                            Price = 120000m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 5,
                            Archived = false,
                            CategoryId = 8,
                            ImageUrl = "https://static.tcimg.net/vehicles/primary/b98f3827e42dc106/2024-BMW-X5_M-white-full_color-driver_side_front_quarter.png",
                            Name = "BMW X5",
                            Price = 70000m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            Archived = false,
                            CategoryId = 1,
                            ImageUrl = "https://jaegersentrum.no/wp-content/uploads/2022/06/bildekort.png",
                            Name = "BMW M760e",
                            Price = 1670000m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            Archived = false,
                            CategoryId = 8,
                            ImageUrl = "https://www.motortrend.com/uploads/2022/09/2023-BMW-XM-1.jpg?w=768&width=768&q=75&format=webp",
                            Name = "BMW XM",
                            Price = 240000m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            Archived = false,
                            CategoryId = 9,
                            ImageUrl = "https://img.tipcars.com/fotky_velke/26141816_1/0/E/bmw-x7-xdrive40i.jpg",
                            Name = "BMW X7",
                            Price = 150000m,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Coupe"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Roadster"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Convertible"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gran Coupe"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Station wagon"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Hatchback"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Crossover"
                        },
                        new
                        {
                            Id = 9,
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Roadster"
                        });
                });

            modelBuilder.Entity("Data.Entities.Cars", b =>
                {
                    b.HasOne("Data.Entities.Category", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Data.Entities.Category", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
